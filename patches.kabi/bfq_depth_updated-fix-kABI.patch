From: Otto Hollmann >ohollmann@suse.com>
Date: Fri Jan 5 17:20:16 2021
Subject: [PATCH] bfq: Fix kABI for update internal depth state when queue depth changes
Patch-mainline: never, kABI workaround
References: bsc#1172455

diff --git a/block/bfq-iosched.c b/block/bfq-iosched.c
index dfb8cb0af13a..5ba1e0d841b4 100644
--- a/block/bfq-iosched.c
+++ b/block/bfq-iosched.c
@@ -5786,10 +5786,12 @@
 		.requests_merged	= bfq_requests_merged,
 		.request_merged		= bfq_request_merged,
 		.has_work		= bfq_has_work,
-		.depth_updated		= bfq_depth_updated,
 		.init_hctx		= bfq_init_hctx,
 		.init_sched		= bfq_init_queue,
 		.exit_sched		= bfq_exit_queue,
+#ifndef __GENKSYMS__
+		.depth_updated		= bfq_depth_updated,
+#endif
 	},
 
 	.uses_mq =		true,
--- a/include/linux/elevator.h
+++ b/include/linux/elevator.h
@@ -98,7 +98,6 @@
 	void (*exit_sched)(struct elevator_queue *);
 	int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int);
 	void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int);
-	void (*depth_updated)(struct blk_mq_hw_ctx *);
 
 	bool (*allow_merge)(struct request_queue *, struct request *, struct bio *);
 	bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *);
@@ -118,6 +118,10 @@
 	struct request *(*next_request)(struct request_queue *, struct request *);
 	void (*init_icq)(struct io_cq *);
 	void (*exit_icq)(struct io_cq *);
+#ifndef __GENKSYMS__
+	void (*depth_updated)(struct blk_mq_hw_ctx *);
+#endif
+
 };
 
 #define ELV_NAME_MAX	(16)
